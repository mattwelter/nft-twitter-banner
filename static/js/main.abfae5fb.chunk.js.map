{"version":3,"sources":["services/Renderer.js","components/AssetItem.js","components/AssetList.js","components/ProgressIndicator.js","components/RenderingDetails.js","components/RenderingResults.js","App.js","reportWebVitals.js","index.js"],"names":["makeIteratorThatFillsWithColor","color","x","y","offset","this","bitmap","data","writeUInt32BE","renderToImage","bgImage","urls","align","crop","a","border","padding","size","Math","min","length","alignment","Jimp","read","img","Promise","all","map","url","tiles","forEach","tile","i","ratio","width","height","w","h","resize","scan","blit","max","composite","getBase64Async","MIME_JPEG","alignments","preloadImage","src","resolve","reject","Image","onload","onerror","AssetItem","asset","addAsset","delAsset","inAssets","useState","isLoading","setLoading","useEffect","preload","image_url","toggleAsset","className","tabIndex","onClick","e","preventDefault","bind","onKeyDown","keyCode","title","collection","name","filter","join","style","borderRadius","paddingTop","backgroundColor","background_color","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","AssetList","addr","assets","setAssets","isComplete","setComplete","loader","useRef","loadMore","useCallback","entries","isIntersecting","params","qs","owner","limit","Object","keys","k","encodeURIComponent","fetch","API_URL","then","resp","json","newAssets","concat","catch","err","console","error","fetchItems","loader_current","current","observer","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","index","ref","ProgressIndicator","message","RenderingDetails","canRender","renderImage","backgroundImages","isAssetSelected","setBackgroundImage","setAlignment","isCropped","setCropped","handleChange","setter","parseInt","target","value","onSubmit","htmlFor","id","onChange","disabled","type","checked","RenderingResults","dataURL","Fragment","alt","href","download","splitBackgrounds","val","result","split","item","v","trim","App","props","ownerID","setOwnerID","setDataURL","isRendering","setRendering","imageURLs","imageURL","display","flexDirection","push","token_id","placeholder","pattern","maxLength","bgStr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","elem","document","getElementById","ReactDOM","render","StrictMode","getAttribute"],"mappings":"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","file":"static/js/main.abfae5fb.chunk.js","sourcesContent":["import Jimp from 'jimp';\n\nfunction makeIteratorThatFillsWithColor(color) {\n  return function(x, y, offset) {\n    this.bitmap.data.writeUInt32BE(color, offset, true);\n  }\n};\n\nexport async function renderToImage(bgImage, urls, align, crop) {\n  const border = 2,\n      padding = 35,\n      size = Math.min(250, 1500 / (urls.length + 1)),\n      alignment = align || 0;\n  let img = await Jimp.read(bgImage),\n      tiles = await Promise.all(urls.map(url => Jimp.read(url))),\n      offset = (1500 - (urls.length * size))/(urls.length + 1); // distance\n\n  tiles.forEach((tile, i) => {\n    if (crop) {\n\n      const ratio = (size - 2.0*border)/Math.min(tile.bitmap.width, tile.bitmap.height);\n      const w = tile.bitmap.width*ratio, h = tile.bitmap.height*ratio;\n      tile.resize(w, h)\n\n      img.scan(\n        offset + i*(size+offset),\n        (alignment === 1\n          ? padding                                   // Top\n          : (alignment === 2\n            ? 500 - padding - size                    // Bottom\n            : (500 - size - 2*border)/2)),            // Center\n        size,\n        size,\n        makeIteratorThatFillsWithColor(0x00000040) // 0xED143DFF\n      );\n\n      img.blit(\n        tile,\n        offset + border + i*(size + offset),\n        (alignment === 1\n          ? padding + border                // Top\n          : (alignment === 2\n            ? 500 - padding + border - size // Bottom\n            : (500 - size)/2)),             // Center\n        Math.max(0, (w - size)/2),\n        Math.max(0, (h - size)/2),\n        size - 2*border,\n        size - 2*border\n      );\n\n    } else {\n      // scale tile to fit size\n      const ratio = (size - 2.0*border)/Math.max(tile.bitmap.width, tile.bitmap.height);\n      const w = tile.bitmap.width*ratio, h = tile.bitmap.height*ratio;\n      tile.resize(w, h);\n\n      // render border / fill black rectangle\n      img.scan(\n        offset + i*(size + offset) + (size - 2*border - tile.bitmap.width)/2,\n        (alignment === 1\n          ? padding + (size - 2*border - tile.bitmap.height)/2                 // Top\n          : (alignment === 2\n            ? 500 - padding - size + (size - 2*border - tile.bitmap.height)/2  // Bottom\n            : (500 - tile.bitmap.height - 2*border)/2)),                       // Center\n        tile.bitmap.width + 2*border,\n        tile.bitmap.height + 2*border,\n        makeIteratorThatFillsWithColor(0x00000040) // 0xED143DFF\n      );\n\n      // render tile\n      img.composite(\n        tile,\n        offset + border + i*(size + offset) + (size - 2*border - tile.bitmap.width)/2,\n        (alignment === 1\n          ? padding + border + (size - 2*border - tile.bitmap.height)/2                // Top\n          : (alignment === 2\n            ? 500 - padding + border - size + (size - 2*border - tile.bitmap.height)/2 // Bottom\n            : (500 - tile.bitmap.height)/2))                                           // Center\n      );\n    }\n  });\n  return await img.getBase64Async(Jimp.MIME_JPEG);\n}\n\nexport const alignments = { 0: 'Center', 1: 'Top', 2: 'Bottom'};\n","import './AssetItem.css';\nimport React, { useEffect, useState } from 'react';\n\n\nconst preloadImage =  src => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = resolve;\n    img.onerror = reject;\n    img.src = src;\n    return img;\n  });\n}\n\nconst AssetItem = ({ asset, addAsset, delAsset, inAssets }) => {\n\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const preload = async src => {\n      setLoading(true);\n      await preloadImage(src);\n      setLoading(false);\n    };\n    preload(asset.image_url);\n  }, [asset]);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    toggleAsset(asset);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 32) {\n      e.preventDefault();\n      toggleAsset(asset);\n    }\n  };\n\n  const toggleAsset = (asset) => {\n    if (inAssets(asset)) {\n      delAsset(asset);\n    } else {\n      addAsset(asset);\n    }\n  }\n\n  return (\n    <div\n      className=\"asset-item\"\n      tabIndex=\"0\"\n      onClick={handleClick.bind(this)}\n      onKeyDown={handleKeyDown.bind(this)}\n    >\n      <div\n        title={ `${[asset.collection.name, asset.name].filter(e => e).join(' - ')}` }\n        style={{\n          borderRadius: 3,\n          width: '100%',\n          paddingTop: '100%',\n          backgroundColor: `${asset.background_color ? asset.background_color : '#eee'}`,\n          backgroundImage: `url(${isLoading ? 'spinner.gif' : asset.image_url})`,\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          backgroundSize: 'contain',\n          filter: `brightness(${ inAssets(asset) ? '1.0' : '0.5'})`\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default AssetItem;\n","import './AssetList.css';\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\n\nimport AssetItem from './AssetItem';\n\n\nconst API_URL = 'https://api.opensea.io/api/v1/assets';\n\nconst getQueryString = function(params) {\n  return Object.keys(params).map(k => {\n    return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;\n  }).join('&');\n}\n\nconst AssetList = ({ addr, addAsset, delAsset, inAssets }) => {\n\n  const [assets, setAssets] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isComplete, setComplete] = useState(false);\n  const loader = useRef(null);\n\n  const loadMore = useCallback((entries) => {\n    const fetchItems = (offset) => {\n      if (isComplete) {\n        return;\n      }\n      setLoading(true);\n      const qs = getQueryString({\n        owner: addr,\n        offset: offset,\n        limit: 40\n      })\n      fetch(API_URL + '?' + qs)\n        .then(resp => resp.json())\n        .then(data => {\n          if (data.assets.length > 0) {\n            const newAssets = assets.concat(data.assets);\n            setAssets(newAssets);\n            setComplete(false);\n          } else {\n            setComplete(true);\n          }\n          setLoading(false);\n        })\n        .catch(err => {\n          console.error(err);\n        })\n    }\n\n    const target = entries[0];\n    if (target.isIntersecting) {\n      !isLoading && fetchItems(assets.length);\n    }\n  }, [addr, assets, isComplete, isLoading]);\n\n  useEffect(() => {\n    const loader_current = loader.current;\n\n    let opts = {\n      root: null,\n      rootMargin: '0px', // '20px'\n      threshold: 1.0  // only observe when the entire box is in view\n    };\n\n    // create observer\n    const observer = new IntersectionObserver(loadMore, opts);\n\n    // observe the loader\n    if (loader && loader.current) {\n      observer.observe(loader.current);\n    }\n\n    // clean up on willUnMount\n    return () => observer.unobserve(loader_current)\n  }, [loader, loadMore]);\n\n  useEffect(() => {\n    // console.log('addr changed', addr);\n    setAssets([]);\n    setComplete(false);\n  }, [addr]);\n\n  return (\n    <div className=\"asset-list-wrapper\">\n      <div className=\"asset-list\">\n        {\n          assets.map((asset, index) => {\n            return (\n              <AssetItem\n                key={index}\n                name={asset.name}\n                url={asset.image_url}\n                asset={asset}\n                addAsset={ addAsset }\n                delAsset={ delAsset }\n                inAssets={ inAssets }\n              />\n            )\n          })\n        }\n      </div>\n\n      <div className=\"loader\" ref={loader}>\n        { !isComplete && isLoading && <span>…</span> }\n      </div>\n    </div>\n  )\n};\n\nexport default AssetList;\n","import './ProgressIndicator.css';\n\nconst ProgressIndicator = ({message}) => {\n  return (\n    <div\n      className=\"overlay\"\n      style={{}}\n    >\n      <span\n        className=\"progress-message\"\n        style={{}}\n      >{ message }</span>\n    </div>\n  );\n};\n\nexport default ProgressIndicator;\n","import './RenderingDetails.css';\nimport React from 'react';\n\nimport { alignments } from '../services/Renderer';\n\nconst RenderingDetails = ({\n  canRender, renderImage,\n  isAssetSelected,\n  backgroundImages,\n  backgroundImage,\n  setBackgroundImage,\n  alignment,\n  setAlignment,\n  isCropped,\n  setCropped\n}) => {\n\n  const handleChange = (setter, e) => {\n    if (setter === setCropped) {\n      setCropped(!isCropped);\n    } else {\n      setter(setter === setAlignment\n        ? parseInt(e.target.value, 10)\n        : e.target.value);\n    }\n\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    renderImage();\n  };\n\n  return (\n    <form onSubmit={ handleSubmit.bind(this) }>\n      <div className=\"row\">\n        <div className=\"col-25\">\n          <label htmlFor=\"background-image\">Background Image</label>\n        </div>\n        <div className=\"col-75\">\n          <select\n            id=\"background-image\"\n            name=\"background\"\n            value={backgroundImage}\n            onChange={handleChange.bind(this, setBackgroundImage)}\n          >\n            <option value=\"\" disabled> -- Select An Option -- </option>\n            {\n              Object.keys(backgroundImages).map((k, index) => {\n                return <option key={index} value={k}>{backgroundImages[k]}</option>\n              })\n            }\n          </select>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-25\">\n          <label htmlFor=\"alignment\">Vertical Alignment</label>\n        </div>\n        <div className=\"col-75\">\n          <select\n            name=\"alignment\"\n            value={alignment}\n            onChange={handleChange.bind(this, setAlignment)}\n          >\n            {\n              Object.keys(alignments).map((k, index) => {\n                return <option key={index} value={k}>{alignments[k]}</option>\n              })\n            }\n          </select>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-25\">\n          <label htmlFor=\"cropped\">Crop Images</label>\n        </div>\n        <div className=\"col-75\">\n          <input\n            type=\"checkbox\"\n            id=\"cropped\"\n            name=\"cropped\"\n            onChange={handleChange.bind(this, setCropped)}\n            checked={isCropped}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <input type=\"submit\" disabled={ !canRender() } value=\"Generate\" />\n      </div>\n    </form>\n  );\n};\n\nexport default RenderingDetails;\n","import './RenderingResults.css';\nimport React from 'react';\n\nconst RenderingResults = ({ dataURL }) => {\n  return (\n    <React.Fragment>\n      <div className=\"banner-wrapper\" style={{ }}>\n        <img\n          src={dataURL}\n          className=\"banner\"\n          alt=\"preview\"\n          style={{}}\n        />\n      </div>\n      <div className=\"download-wrapper\" style={{}}>\n        <a\n          className=\"download-btn\"\n          style={{ }}\n          href={dataURL}\n          download=\"banner.jpg\"\n        >Download</a>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default RenderingResults;\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { renderToImage } from './services/Renderer';\n\nimport AssetList from './components/AssetList';\nimport ProgressIndicator from './components/ProgressIndicator';\nimport RenderingDetails from './components/RenderingDetails';\nimport RenderingResults from './components/RenderingResults';\n\n\nconst MAX_AMOUNT = 9;\nconst ETH_ADDR = '0x4f0fe3269b1844e5a6c81bfe961206abdee5d589';\n// const ETH_ADDR =  '0x6c4cb3c4da1cdc4b7b1f41099f6eacbd82d8f2d2';\n// const ETH_ADDR = '';\n\n// TODO: Use and parse params to pass backgrounds\n// const backgroundImages = {\n//   'background_1.jpg': 'Background 1',\n//   'background_2.jpg': 'Background 2',\n//   'background_3.jpg': 'Background 3',\n// };\n\nconst splitBackgrounds = function(val) {\n  // if (val === null) {\n  //   return backgroundImages;\n  // }\n  let result = {},\n      tokens = val.split(',');\n  tokens.forEach((item, i) => {\n    let [k,v] = item.split('-');\n    result[k.trim()] = v.trim();\n  });\n  return result;\n}\n\nfunction App(props) {\n\n  const [ownerID, setOwnerID] = useState(ETH_ADDR);\n\n  const [assets, setAssets] = useState([]);\n  const [backgroundImage, setBackgroundImage] = useState('');\n  const [alignment, setAlignment] = useState(0);\n  const [isCropped, setCropped] = useState(false);\n  const [dataURL, setDataURL] = useState('');\n  const [isRendering, setRendering] = useState(false);\n\n  const addAsset = (asset) => {\n    // console.log('add', asset);\n    if (assets.length >= MAX_AMOUNT) {\n      return;\n    }\n    const newAssets = [...assets];\n    newAssets.push(asset);\n    setAssets(newAssets);\n  };\n\n  const delAsset = (asset) => {\n    // console.log('rm', asset);\n    const newAssets = assets.filter(item => item.token_id !== asset.token_id);\n    setAssets(newAssets);\n  };\n\n  const inAssets = (asset) => {\n    return assets.filter(item => item.token_id === asset.token_id).length > 0;\n  };\n\n  const isAssetSelected = () => {\n    return 0 < assets.length;\n  };\n\n  const canRender = () => {\n    return !isRendering && backgroundImage && isAssetSelected();\n  };\n\n  const renderImage = async (backgroundImage, assets, alignment, crop) => {\n    // console.log('render image');\n    if (!canRender()) {\n      return;\n    }\n    setRendering(true);\n    setDataURL(null);\n\n    // TODO: How to proceed with missing urls.\n    const imageURLs = assets\n      .filter(asset => asset.image_url)\n      .map(asset => asset.image_url );\n    try {\n      const imageURL = await renderToImage(backgroundImage, imageURLs, alignment, crop);\n      setDataURL(imageURL);\n    } catch(err) {\n      // TODO: Handle error here!\n      console.error(err);\n    }\n\n    setRendering(false);\n  };\n\n  const generateImage = () => {\n    renderImage(backgroundImage, assets, alignment, isCropped);\n  };\n\n  const handleChange = (setter, e) => {\n    setter(e.target.value);\n  };\n\n  // currently unused\n  // const validateOwnerID = ownerID => {\n  //   return ownerID === '' || /^0x[0-9a-f]{40}$/.test(ownerID);\n  // }\n\n  useEffect(() => {\n    setAssets([]);\n    setDataURL(null);\n  }, [ownerID]);\n\n  return (\n    <div className=\"App\" style={{ display: 'flex', flexDirection: 'column', }}>\n\n      <div className=\"main\">\n        <div className=\"sidebar\" style={{ }}>\n\n          <AssetList\n            addr={ ownerID }\n            addAsset={ addAsset }\n            delAsset={ delAsset }\n            inAssets={ inAssets }\n          />\n\n        </div>\n        <div className=\"content\" style={{ }}>\n          <div style={{ padding: '0.5rem 1rem', backgroundColor: '#2c2d2f', color: '#fff' }}>\n            <div className=\"row\">\n              <div className=\"col-25\">\n                <label htmlFor=\"onwerID\">ETH Address</label>\n              </div>\n              <div className=\"col-25\">\n                <input\n                  type=\"text\"\n                  onChange={handleChange.bind(this, setOwnerID)}\n                  value={ownerID}\n                  placeholder=\"ETH Address\"\n                  pattern=\"0x[0-9a-f]{40}\"\n                  maxLength=\"42\"\n                  size=\"42\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <RenderingDetails\n            backgroundImages={splitBackgrounds(props.bgStr)/*backgroundImages*/}\n            backgroundImage={backgroundImage}\n            setBackgroundImage={setBackgroundImage}\n            alignment={alignment}\n            setAlignment={setAlignment}\n            isAssetSelected={isAssetSelected}\n            renderImage={generateImage}\n            canRender={canRender}\n            isCropped={isCropped}\n            setCropped={setCropped}\n          />\n\n          { dataURL && <RenderingResults dataURL={dataURL} />}\n        </div>\n      </div>\n      { isRendering && <ProgressIndicator message={'Work in progress.'} /> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst elem = document.getElementById('root');\nReactDOM.render(\n  <React.StrictMode>\n    <App bgStr={elem.getAttribute('data-bg-imgs')} />\n  </React.StrictMode>,\n  elem\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}